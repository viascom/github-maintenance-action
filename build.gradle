plugins {
    id "idea"
    id "application"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "2.1.21"
    id "io.spring.dependency-management" version "1.1.7"
    id "org.springframework.boot" version "3.5.0"
}

defaultTasks("clean", "build")

group = "io.viascom.github.action.maintenance"

def major = "0"
def minor = "1"
def patch = "0"

version = "$major.$minor.$patch"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

bootJar {
    archiveFileName = "github-maintenance-action.jar"
}

application {
    mainClassName = "io.viascom.github.action.maintenance.GitHubActionApplication"
}

springBoot {
    buildInfo()
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/viascom/*")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.google.code.gson:gson:2.13.1"
    implementation "com.bucket4j:bucket4j_jdk17-core:8.14.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

//docker {
//    dependsOn bootJar
//    name "viascom/${rootProject.name}:${version}"
//    tags "$version"
//    dockerfile file("docker/Dockerfile")
//    files bootJar.archiveFile, 'docker/build_application.sh', 'docker/run_application.sh', 'docker/packages.list'
//    buildArgs([APP_NAME: 'github-maintenance-action', JAR_FILE: 'github-maintenance-action.jar'])
//    pull true
//    noCache true
//}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/viascom/github-maintenance-action")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}